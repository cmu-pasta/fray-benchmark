org.apache.kafka.streams.processor.internals.assignment.CustomStickyTaskAssignorTest#shouldKeepActiveTaskStickinessWhenMoreClientThanActiveTasks
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldInjectProducerPerThreadUsingClientSupplierOnCreateIfEosV2Enabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldInjectProducerPerThreadUsingClientSupplierOnCreateIfEosV2Enabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnStandbyTaskMetadataWhileRunningState
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnStandbyTaskMetadataWhileRunningState
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldPunctuateWithTimestampPreservedInProcessorContext
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldInjectSharedProducerForAllTasksUsingClientSupplierOnCreateIfEosDisabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldInjectSharedProducerForAllTasksUsingClientSupplierOnCreateIfEosDisabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldLogAndRecordSkippedRecordsForInvalidTimestamps
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldLogAndRecordSkippedRecordsForInvalidTimestamps
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldGetProducerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldGetProducerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldTimeOutOnProducerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldTimeOutOnProducerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldPunctuateActiveTask
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfProducerGotFencedInCommitTransactionWhenSuspendingTasks
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfProducerGotFencedInCommitTransactionWhenSuspendingTasks
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfInvalidPidMappingOccurredInCommitTransactionWhenSuspendingTasks
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfInvalidPidMappingOccurredInCommitTransactionWhenSuspendingTasks
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldInjectProducerPerTaskUsingClientSupplierOnCreateIfEosAlphaEnabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldInjectProducerPerTaskUsingClientSupplierOnCreateIfEosAlphaEnabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldTimeOutOnMainConsumerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldTimeOutOnMainConsumerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotThrowWhenStandbyTasksAssignedAndNoStateStoresForTopology
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotThrowWhenStandbyTasksAssignedAndNoStateStoresForTopology
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfProducerWasFencedWhileProcessing
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfProducerWasFencedWhileProcessing
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldCreateMetricsAtStartup
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldCreateMetricsAtStartup
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldEnforceRebalanceWhenScheduledAndNotCurrentlyRebalancing
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldEnforceRebalanceWhenScheduledAndNotCurrentlyRebalancing
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldEnforceRebalanceWhenScheduledAndNotCurrentlyRebalancing
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnActiveTaskMetadataWhileRunningState
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnActiveTaskMetadataWhileRunningState
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskProducerWhenSuspending
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskProducerWhenSuspending
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfPidMappingIsInvalidInCommitTransactionWhenCommitting
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfPidMappingIsInvalidInCommitTransactionWhenCommitting
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldTimeOutOnRestoreConsumerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldTimeOutOnRestoreConsumerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotEnforceRebalanceWhenCurrentlyRebalancing
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotEnforceRebalanceWhenCurrentlyRebalancing
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotEnforceRebalanceWhenCurrentlyRebalancing
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfProducerGotFencedInCommitTransactionWhenCommitting
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldNotCloseTaskAndRemoveFromTaskManagerIfProducerGotFencedInCommitTransactionWhenCommitting
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldProducerInstanceIdAndInternalTimeout
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldProducerInstanceIdAndInternalTimeout
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnErrorIfRestoreConsumerInstanceIdNotInitialized
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnErrorIfRestoreConsumerInstanceIdNotInitialized
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnNullIfMainConsumerTelemetryDisabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnNullIfMainConsumerTelemetryDisabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldGetMainAndRestoreConsumerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldGetMainAndRestoreConsumerInstanceId
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldLogAndRecordSkippedMetricForDeserializationException
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldLogAndRecordSkippedMetricForDeserializationException
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldRespectNumIterationsInMainLoopWithoutProcessingThreads
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnErrorIfProducerInstanceIdNotInitialized
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnErrorIfProducerInstanceIdNotInitialized
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldRecoverFromInvalidOffsetExceptionOnRestoreAndFinishRestore
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldRecoverFromInvalidOffsetExceptionOnRestoreAndFinishRestore
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldRecoverFromInvalidOffsetExceptionOnRestoreAndFinishRestore
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldChangeStateAtStartClose
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldChangeStateAtStartClose
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldChangeStateAtStartClose
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnNullIfRestoreConsumerTelemetryDisabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnNullIfRestoreConsumerTelemetryDisabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldGetMainAndRestoreConsumerInstanceIdWithInternalTimeout
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldGetMainAndRestoreConsumerInstanceIdWithInternalTimeout
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnNullIfProducerTelemetryDisabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnNullIfProducerTelemetryDisabled
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldOnlyCompleteShutdownAfterRebalanceNotInProgress
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReinitializeRevivedTasksInAnyState
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReinitializeRevivedTasksInAnyState
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnErrorIfMainConsumerInstanceIdNotInitialized
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldReturnErrorIfMainConsumerInstanceIdNotInitialized
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldAlwaysUpdateTasksMetadataAfterChangingState
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldAlwaysUpdateTasksMetadataAfterChangingState
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldChangeStateInRebalanceListener
org.apache.kafka.streams.processor.internals.StreamThreadTest#shouldChangeStateInRebalanceListener
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskManagerTest#shouldReturnFromAwaitOnAdding
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskManagerTest#shouldReturnFromAwaitOnSignalProcessableTasks
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskManagerTest#shouldReturnFromAwaitOnUnassignment
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskManagerTest#shouldBlockOnAwait
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskManagerTest#shouldReturnFromAwaitOnInterruption
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskManagerTest#shouldReturnFromAwaitOnUnlocking
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldReturnFalseForRestoreActiveTasksIfTaskRemovedFromStateUpdater
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldReturnTrueForRestoreActiveTasksIfStandbyTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfAddingStandbyTasksWithSameId
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotPauseStandbyTaskInFailedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldHandleTaskCorruptedExceptionAndAddFailedTasksToQueue
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRecordMetrics
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldGetTasksFromUpdatingTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldGetTasksFromRestoredActiveTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotPauseActiveStatefulTaskInFailedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldImmediatelyAddSingleStatelessTaskToRestoredTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldUpdateStandbyTaskAfterAllActiveStatefulTasksRemoved
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldAddFailedTasksToQueueWhenUncaughtExceptionIsThrown
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfRestartedWithNonEmptyFailedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldReturnTrueForRestoreActiveTasksIfTaskRestored
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRemoveUpdatingStandbyTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotResumeStandbyTaskInFailedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldShutdownStateUpdaterWithPausedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfRemovingUpdatingActiveTaskFailsWithRuntimeException
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldPauseStandbyTaskAndNotTransitToRestoreActive
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotPausingNonExistTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotAutoCheckpointTasksIfIntervalNotElapsed
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRemoveActiveStatefulTaskFromRestoredActiveTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldGetTasksFromPausedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotResumeActiveStatefulTaskInFailedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfRemovingPausedTaskFails
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfAddingStandbyAndActiveTaskWithSameId
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldResumeStandbyTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldShutdownStateUpdater
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfRemovingUpdatingActiveTaskFailsWithStreamsException
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotResumeNonExistingTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldUpdateMultipleStandbyTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldUpdateStandbyTaskAfterAllActiveStatefulTasksFailed
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldResumeActiveStatefulTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldPauseActiveTaskAndTransitToUpdateStandby
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldAddFailedTasksToQueueWhenRestoreThrowsStreamsExceptionWithoutTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotSwitchTwiceToUpdatingStandbyTaskIfStandbyTaskIsRemoved
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldReturnFalseForRestoreActiveTasksIfTaskRemoved
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldShutdownStateUpdaterAndRestart
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRemoveUpdatingActiveStatefulTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfRemovingUpdatingStandbyTaskFailsWithRuntimeException
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotPauseActiveStatefulTaskInRestoredActiveTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldReturnTrueForRestoreActiveTasksIfTaskUpdating
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRemoveActiveStatefulTaskFromFailedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfRestartedWithNonEmptyRestoredTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldUpdateSingleStandbyTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldImmediatelyAddMultipleStatelessTasksToRestoredTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotTransitToStandbyAgainAfterStandbyTaskFailed
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRestoreSingleActiveStatefulTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldAddFailedTasksToQueueWhenRestoreThrowsStreamsExceptionWithTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRestoreActiveStatefulTaskThenUpdateStandbyTaskAndAgainRestoreActiveStatefulTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldNotResumeActiveStatefulTaskInRestoredActiveTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfAddingActiveAndStandbyTaskWithSameId
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldDrainFailedTasksAndExceptions
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRemoveStandbyTaskFromFailedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldIdleWhenAllTasksPaused
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfRemovingUpdatingStandbyTaskFailsWithStreamsException
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldCompleteWithNullIfNoTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldReturnTrueForRestoreActiveTasksIfTaskFailed
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldAutoCheckpointTasksOnInterval
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldGetTasksFromExceptionsAndFailedTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldPauseActiveStatefulTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRestoreMultipleActiveStatefulTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldReturnTrueForRestoreActiveTasksIfTaskPaused
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldCompleteWithNullIfTaskNotFound
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldDrainRestoredActiveTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRemovePausedTask
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldThrowIfAddingActiveTasksWithSameId
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRestoreActiveStatefulTasksAndUpdateStandbyTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldRemoveStatelessTaskFromRestoredActiveTasks
org.apache.kafka.streams.processor.internals.DefaultStateUpdaterTest#shouldPauseStandbyTask
org.apache.kafka.streams.processor.internals.StateDirectoryTest#shouldNotLockStateDirLockedByAnotherThread
org.apache.kafka.streams.processor.internals.StateDirectoryTest#shouldNotUnLockStateDirLockedByAnotherThread
org.apache.kafka.streams.processor.internals.StateDirectoryTest#shouldNotFailWhenCreatingTaskDirectoryInParallel
org.apache.kafka.streams.KafkaStreamsTest#shouldReturnAdminInstanceID
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnCleanupWhileShuttingDownStreamClosedWithCloseOptionLeaveGroupFalse
org.apache.kafka.streams.KafkaStreamsTest#shouldAllowCleanupBeforeStartAndAfterClose
org.apache.kafka.streams.KafkaStreamsTest#shouldNotSetGlobalRestoreListenerAfterStarting
org.apache.kafka.streams.KafkaStreamsTest#shouldNotAddThreadWhenClosed
org.apache.kafka.streams.KafkaStreamsTest#shouldNotTriggerRecordingOfRocksDBMetricsIfRecordingLevelIsInfo
org.apache.kafka.streams.KafkaStreamsTest#shouldNotGetAllTasksWhenNotRunning
org.apache.kafka.streams.KafkaStreamsTest#testInitializesAndDestroysMetricsReporters
org.apache.kafka.streams.KafkaStreamsTest#shouldNotBlockInCloseForZeroDuration
org.apache.kafka.streams.KafkaStreamsTest#shouldReturnEmptyLocalStorePartitionLags
org.apache.kafka.streams.KafkaStreamsTest#stateShouldTransitToRunningIfNonDeadThreadsBackToRunning
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowTimeoutExceptionWhenMainConsumerFutureDoesNotComplete
org.apache.kafka.streams.KafkaStreamsTest#shouldAddThreadWhenRunning
org.apache.kafka.streams.KafkaStreamsTest#testShowPauseResumeAreIdempotent
org.apache.kafka.streams.KafkaStreamsTest#shouldCleanupResourcesOnCloseWithoutPreviousStart
org.apache.kafka.streams.KafkaStreamsTest#statefulTopologyShouldCreateStateDirectory
org.apache.kafka.streams.KafkaStreamsTest#shouldNotRemoveThreadWhenNotRunning
org.apache.kafka.streams.KafkaStreamsTest#shouldNotGetStoreWhenWhenNotRunningOrRebalancing
org.apache.kafka.streams.KafkaStreamsTest#shouldReturnFalseOnCloseWhenThreadsHaventTerminated
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowUnknownStateStoreExceptionWhenStoreNotExist
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowTimeExceptionWhenAdminTimesOut
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowTimeoutExceptionWhenThreadProducerFutureDoesNotComplete
org.apache.kafka.streams.KafkaStreamsTest#shouldCountDownTimeoutAcrossClient
org.apache.kafka.streams.KafkaStreamsTest#shouldNotGetAllTasksWithStoreWhenNotRunning
org.apache.kafka.streams.KafkaStreamsTest#shouldNotCreateStreamThreadsForGlobalOnlyTopology
org.apache.kafka.streams.KafkaStreamsTest#shouldTransitToRunningWithGlobalOnlyTopology
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowStreamsExceptionWhenAdminNotInitialized
org.apache.kafka.streams.KafkaStreamsTest#shouldCleanupOldStateDirs
org.apache.kafka.streams.KafkaStreamsTest#shouldNotBlockInCloseWithCloseOptionLeaveGroupFalseForZeroDuration
org.apache.kafka.streams.KafkaStreamsTest#statelessTopologyShouldNotCreateStateDirectory
org.apache.kafka.streams.KafkaStreamsTest#testCannotStartOnceClosed
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowExceptionSettingStreamsUncaughtExceptionHandlerNotInCreateState
org.apache.kafka.streams.KafkaStreamsTest#testShouldTransitToNotRunningIfCloseRightAfterCreated
org.apache.kafka.streams.KafkaStreamsTest#testStateGlobalThreadClose
org.apache.kafka.streams.KafkaStreamsTest#shouldReturnFalseOnCloseWithCloseOptionWithLeaveGroupTrueWhenThreadsHaventTerminated
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowNullPointerExceptionSettingStreamsUncaughtExceptionHandlerIfNull
org.apache.kafka.streams.KafkaStreamsTest#shouldNotAddThreadWhenCreated
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowExceptionSettingUncaughtExceptionHandlerNotInCreateState
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnCleanupWhileShuttingDown
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnNegativeTimeoutForCloseWithCloseOptionLeaveGroupTrue
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnNegativeTimeoutForCloseWithCloseOptionLeaveGroupFalse
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnClientInstanceIdsWhenClosed
org.apache.kafka.streams.KafkaStreamsTest#shouldNotCrashButThrowLaterIfAdminTelemetryDisabled
org.apache.kafka.streams.KafkaStreamsTest#shouldNotGetQueryMetadataWithPartitionerWhenNotRunningOrRebalancing
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowExceptionSettingStateListenerNotInCreateState
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnClientInstanceIdsWhenNotStarted
org.apache.kafka.streams.KafkaStreamsTest#inMemoryStatefulTopologyShouldNotCreateStateDirectory
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnClientInstanceIdsWithNegativeTimeout
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnCleanupWhilePaused
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnCleanupWhileShuttingDownStreamClosedWithCloseOptionLeaveGroupTrue
org.apache.kafka.streams.KafkaStreamsTest#shouldRemoveThread
org.apache.kafka.streams.KafkaStreamsTest#shouldNotReturnDeadThreads
org.apache.kafka.streams.KafkaStreamsTest#testCloseIsIdempotent
org.apache.kafka.streams.KafkaStreamsTest#shouldGetQueryMetadataWithSerializerWhenRunningOrRebalancing
org.apache.kafka.streams.KafkaStreamsTest#shouldNotGetQueryMetadataWithSerializerWhenNotRunningOrRebalancing
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnCleanupWhileRunning
org.apache.kafka.streams.KafkaStreamsTest#shouldNotBlockInCloseWithCloseOptionLeaveGroupTrueForZeroDuration
org.apache.kafka.streams.KafkaStreamsTest#testStateThreadClose
org.apache.kafka.streams.KafkaStreamsTest#shouldReturnFalseOnCloseWithCloseOptionWithLeaveGroupFalseWhenThreadsHaventTerminated
org.apache.kafka.streams.KafkaStreamsTest#shouldTriggerRecordingOfRocksDBMetricsIfRecordingLevelIsDebug
org.apache.kafka.streams.KafkaStreamsTest#shouldNotAddThreadWhenError
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowOnNegativeTimeoutForClose
org.apache.kafka.streams.KafkaStreamsTest#testPauseResume
org.apache.kafka.streams.KafkaStreamsTest#shouldThrowTimeoutExceptionWhenGlobalConsumerFutureDoesNotComplete
org.apache.kafka.streams.KafkaStreamsTest#testStartingPaused
org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImplTest#shouldNotUseSameStoreLevelSensorKeyWithDifferentThreadIds
org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImplTest#shouldCreateMetricOnceDuringConcurrentMetricCreationRequest
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowTopologyExceptionWhenMultipleNamedTopologiesCreateStreamAndTableFromSameInputTopic
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowTopologyExceptionWhenAddingNamedTopologyReadingFromSameInputTopicAfterStart
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowTopologyExceptionWhenMultipleNamedTopologiesCreateStreamFromSameInputTopic
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldDescribeWithSingleNamedTopology
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldBuildSingleNamedTopology
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldReturnTopologyByName
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowUnknownStateStoreExceptionForStreamsMetadataForStore
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowUnknownStateStoreExceptionForQueryMetadataForKey
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowUnknownTopologyExceptionForStore
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowUnknownTopologyExceptionForQueryMetadataForKey
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowTopologyExceptionWhenAddingNamedTopologyReadingFromSameInputTopicBeforeStart
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldAllowAddingAndRemovingNamedTopologyAndReturnBeforeCallingStart
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldBuildMultipleIdenticalNamedTopologyWithRepartition
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowTopologyExceptionWhenMultipleNamedTopologiesCreateStreamFromSamePattern
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldDescribeWithMultipleNamedTopologies
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldDescribeWithEmptyNamedTopology
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldAllowSameStoreNameToBeUsedByMultipleNamedTopologies
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowUnknownStateStoreExceptionForStore
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowIllegalArgumentOnIllegalName
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowUnknownTopologyExceptionForStreamsMetadataForStore
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldReturnEmptyWhenLookingUpNonExistentTopologyByName
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowUnknownTopologyExceptionForAllLocalStorePartitionLags
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowTopologyExceptionWhenMultipleNamedTopologiesCreateTableFromSameInputTopic
org.apache.kafka.streams.processor.internals.NamedTopologyTest#shouldThrowTopologyExceptionWhenMultipleNamedTopologiesCreateStreamFromOverlappingInputTopicCollection
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldSetUncaughtStreamsException
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldClearTaskTimeoutOnProcessed
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldUnassignTaskWhenRequired
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldClearTaskReleaseFutureOnShutdown
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldProcessTasks
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldPunctuateStreamTime
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldShutdownTaskExecutor
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldAwaitProcessableTasksIfNoneAssignable
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldRespectPunctuationDisabledByTaskExecutionMetadata
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldSetTaskTimeoutOnTimeoutException
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldPunctuateSystemTime
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldUnassignTaskWhenNotProgressing
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldNotFlushOnException
org.apache.kafka.streams.processor.internals.tasks.DefaultTaskExecutorTest#shouldRespectProcessingDisabledByTaskExecutionMetadata
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldTimeOutOnGlobalConsumerInstanceId
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldStayDeadAfterTwoCloses
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldGetGlobalConsumerClientInstanceIdWithInternalTimeoutException
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldReturnNullIfTelemetryDisabled
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldTransitionToRunningOnStart
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldGetGlobalConsumerClientInstanceId
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldReturnErrorIfInstanceIdNotInitialized
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldDieOnInvalidOffsetExceptionDuringStartup
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldCloseStateStoresOnClose
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldBeRunningAfterSuccessfulStart
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldDieOnInvalidOffsetExceptionWhileRunning
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldStopRunningWhenClosedByUser
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldThrowStreamsExceptionOnStartupIfThereIsAStreamsException
org.apache.kafka.streams.processor.internals.GlobalStreamThreadTest#shouldThrowStreamsExceptionOnStartupIfExceptionOccurred
org.apache.kafka.streams.processor.internals.StreamsPartitionAssignorTest#shouldTriggerImmediateRebalanceOnTasksRevoked
org.apache.kafka.streams.integration.KTableKTableForeignKeyJoinIntegrationTest#shouldEmitRecordWhenOldAndNewFkDiffer
